{
  "Create Functional Component with Interface": {
    "prefix": "crfc",
    "body": [
      "import React from 'react';",
      "",
      "interface ${1/(.*)/${0:/capitalize}/}Props {",
      "}",
      "",
      "const ${1/(.*)/${0:/capitalize}/} = (props: ${1/(.*)/${0:/capitalize}/}Props): JSX.Element => {",
      "  return (",
      "    <div>${1/(.*)/${0:/capitalize}/}</div>",
      "  );",
      "};",
      "",
      "export default ${1/(.*)/${0:/capitalize}/};",
      ""
    ],
    "description": "Creates a functional component"
  },
  "Create Functional Component with Type": {
    "prefix": "crfct",
    "body": [
      "import React from 'react';",
      "",
      "type ${1/(.*)/${0:/capitalize}/}Props = {",
      "};",
      "",
      "const ${1/(.*)/${0:/capitalize}/} = (props: ${1/(.*)/${0:/capitalize}/}Props): JSX.Element => {",
      "  return (",
      "    <div>${1/(.*)/${0:/capitalize}/}</div>",
      "  );",
      "};",
      "",
      "export default ${1/(.*)/${0:/capitalize}/};",
      ""
    ],
    "description": "Creates a functional component"
  },
  "Use State Quick Initialization": {
    "prefix": "usestate",
    "body": "const [$2, set${2/(.*)/${1:/capitalize}/}] = useState($3);",
    "description": "Quick initialization for useState hook"
  },
  "Use Effect Quick Initialization": {
    "prefix": ["useeffect", "useffect"],
    "body": ["useEffect(() => {", "  $1", "}, []);"],
    "description": "Quick initialization for useEffect hook"
  },
  "Styled Components Quick Initialization for HTML Elements": {
    "prefix": ["styled", "styledh"],
    "body": ["const Styled${2/(.*)/${1:/capitalize}/} = styled.$3`$0`;"]
  },
  "Styled Components Quick Initialization for React Components": {
    "prefix": ["styledr"],
    "body": ["const Styled${2/(.*)/${1:/capitalize}/} = styled($3)`$0`;"]
  },
  "Styled Components Quick Import": {
    "prefix": ["sc"],
    "body": ["import styled from 'styled-components';"],
    "description": "Quick import for styled-components package"
  },
  "Interface": {
    "prefix": ["int"],
    "body": ["interface ${1/(.*)/${0:/capitalize}/} {}"]
  },
  "Interface with Export Statement": {
    "prefix": ["intexp"],
    "body": ["export interface ${1/(.*)/${0:/capitalize}/} {}"]
  },
  "Type": {
    "prefix": ["type"],
    "body": ["type ${1/(.*)/${0:/capitalize}/} = {};"]
  },
  "Type with Export Statement": {
    "prefix": ["typeexp"],
    "body": ["export type ${1/(.*)/${0:/capitalize}/} = {};"]
  }
}
